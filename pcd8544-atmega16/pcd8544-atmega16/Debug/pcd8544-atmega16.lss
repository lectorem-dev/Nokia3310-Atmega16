
pcd8544-atmega16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000096c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001ec  00800060  0000096c  000009e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00000bcc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c28  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f82  00000000  00000000  00000ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000083b  00000000  00000000  00001c66  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000068f  00000000  00000000  000024a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  00002b30  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000420  00000000  00000000  00002c44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004e2  00000000  00000000  00003064  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00003546  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	12 e0       	ldi	r17, 0x02	; 2
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e6       	ldi	r30, 0x6C	; 108
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 34       	cpi	r26, 0x4C	; 76
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 6c 00 	call	0xd8	; 0xd8 <main>
  7a:	0c 94 b4 04 	jmp	0x968	; 0x968 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <shift_register_init>:
#define CLK   PD3
#define QH    PD4

// Инициализация сдвигового регистра
void shift_register_init() {
	DDRD |= (1 << SH_LD) | (1 << CLK);
  82:	81 b3       	in	r24, 0x11	; 17
  84:	8c 60       	ori	r24, 0x0C	; 12
  86:	81 bb       	out	0x11, r24	; 17
	DDRD &= ~(1 << QH);
  88:	81 b3       	in	r24, 0x11	; 17
  8a:	8f 7e       	andi	r24, 0xEF	; 239
  8c:	81 bb       	out	0x11, r24	; 17
	PORTD |= (1 << SH_LD);
  8e:	82 b3       	in	r24, 0x12	; 18
  90:	84 60       	ori	r24, 0x04	; 4
  92:	82 bb       	out	0x12, r24	; 18
	PORTD &= ~(1 << CLK);
  94:	82 b3       	in	r24, 0x12	; 18
  96:	87 7f       	andi	r24, 0xF7	; 247
  98:	82 bb       	out	0x12, r24	; 18
  9a:	08 95       	ret

0000009c <read_buttons>:
}

// Чтение состояния кнопок
uint8_t read_buttons() {
	uint8_t data = 0;
	PORTD &= ~(1 << SH_LD);   // Загрузка данных с кнопок
  9c:	82 b3       	in	r24, 0x12	; 18
  9e:	8b 7f       	andi	r24, 0xFB	; 251
  a0:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <read_buttons+0x8>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <read_buttons+0xa>
  a6:	00 00       	nop
	_delay_us(5);
	PORTD |= (1 << SH_LD);    // Переключение в режим сдвига
  a8:	82 b3       	in	r24, 0x12	; 18
  aa:	84 60       	ori	r24, 0x04	; 4
  ac:	82 bb       	out	0x12, r24	; 18
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <read_buttons+0x14>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <read_buttons+0x16>
  b2:	00 00       	nop
	_delay_us(5);

	for (uint8_t i = 0; i < 8; i++) {
  b4:	20 e0       	ldi	r18, 0x00	; 0
	PORTD &= ~(1 << CLK);
}

// Чтение состояния кнопок
uint8_t read_buttons() {
	uint8_t data = 0;
  b6:	80 e0       	ldi	r24, 0x00	; 0
	PORTD &= ~(1 << SH_LD);   // Загрузка данных с кнопок
	_delay_us(5);
	PORTD |= (1 << SH_LD);    // Переключение в режим сдвига
	_delay_us(5);

	for (uint8_t i = 0; i < 8; i++) {
  b8:	0c c0       	rjmp	.+24     	; 0xd2 <read_buttons+0x36>
		data <<= 1;
  ba:	88 0f       	add	r24, r24
		if (PIND & (1 << QH)) {
  bc:	84 99       	sbic	0x10, 4	; 16
			data |= 1;
  be:	81 60       	ori	r24, 0x01	; 1
		}
		PORTD |= (1 << CLK);
  c0:	92 b3       	in	r25, 0x12	; 18
  c2:	98 60       	ori	r25, 0x08	; 8
  c4:	92 bb       	out	0x12, r25	; 18
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <read_buttons+0x2c>
		_delay_us(2);
		PORTD &= ~(1 << CLK);
  c8:	92 b3       	in	r25, 0x12	; 18
  ca:	97 7f       	andi	r25, 0xF7	; 247
  cc:	92 bb       	out	0x12, r25	; 18
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <read_buttons+0x34>
	PORTD &= ~(1 << SH_LD);   // Загрузка данных с кнопок
	_delay_us(5);
	PORTD |= (1 << SH_LD);    // Переключение в режим сдвига
	_delay_us(5);

	for (uint8_t i = 0; i < 8; i++) {
  d0:	2f 5f       	subi	r18, 0xFF	; 255
  d2:	28 30       	cpi	r18, 0x08	; 8
  d4:	90 f3       	brcs	.-28     	; 0xba <read_buttons+0x1e>
		PORTD &= ~(1 << CLK);
		_delay_us(2);
	}

	return data;
}
  d6:	08 95       	ret

000000d8 <main>:

int main(void) {
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	cd b7       	in	r28, 0x3d	; 61
  de:	de b7       	in	r29, 0x3e	; 62
  e0:	60 97       	sbiw	r28, 0x10	; 16
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	f8 94       	cli
  e6:	de bf       	out	0x3e, r29	; 62
  e8:	0f be       	out	0x3f, r0	; 63
  ea:	cd bf       	out	0x3d, r28	; 61
	pcd8544_init();
  ec:	0e 94 24 01 	call	0x248	; 0x248 <pcd8544_init>
	pcd8544_clear();
  f0:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <pcd8544_clear>
	shift_register_init();
  f4:	0e 94 41 00 	call	0x82	; 0x82 <shift_register_init>

	uint8_t x = 3, y = 2; // Начальная позиция точки
  f8:	12 e0       	ldi	r17, 0x02	; 2
  fa:	03 e0       	ldi	r16, 0x03	; 3
	char buffer[16];

	while (1) {
		uint8_t btns = read_buttons();
  fc:	0e 94 4e 00 	call	0x9c	; 0x9c <read_buttons>

		// Если кнопка 1 (вверх) нажата
		if (!(btns & (1 << 0)) && y > 0) {
 100:	80 fd       	sbrc	r24, 0
 102:	1f c0       	rjmp	.+62     	; 0x142 <main+0x6a>
 104:	11 23       	and	r17, r17
 106:	e9 f0       	breq	.+58     	; 0x142 <main+0x6a>
			y--;
 108:	11 50       	subi	r17, 0x01	; 1
			pcd8544_clear();
 10a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <pcd8544_clear>
			sprintf(buffer, "X: %d Y: %d", x, y);
 10e:	1f 92       	push	r1
 110:	1f 93       	push	r17
 112:	1f 92       	push	r1
 114:	0f 93       	push	r16
 116:	80 e6       	ldi	r24, 0x60	; 96
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	9f 93       	push	r25
 11c:	8f 93       	push	r24
 11e:	ce 01       	movw	r24, r28
 120:	01 96       	adiw	r24, 0x01	; 1
 122:	7c 01       	movw	r14, r24
 124:	9f 93       	push	r25
 126:	8f 93       	push	r24
 128:	0e 94 ca 01 	call	0x394	; 0x394 <sprintf>
			pcd8544_print_at(buffer, 0, 0);
 12c:	40 e0       	ldi	r20, 0x00	; 0
 12e:	60 e0       	ldi	r22, 0x00	; 0
 130:	c7 01       	movw	r24, r14
 132:	0e 94 b9 01 	call	0x372	; 0x372 <pcd8544_print_at>
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	f8 94       	cli
 13a:	de bf       	out	0x3e, r29	; 62
 13c:	0f be       	out	0x3f, r0	; 63
 13e:	cd bf       	out	0x3d, r28	; 61
 140:	62 c0       	rjmp	.+196    	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
		}
		// Если кнопка 2 (вниз) нажата
		else if (!(btns & (1 << 1)) && y < 5) {
 142:	81 fd       	sbrc	r24, 1
 144:	1f c0       	rjmp	.+62     	; 0x184 <main+0xac>
 146:	15 30       	cpi	r17, 0x05	; 5
 148:	e8 f4       	brcc	.+58     	; 0x184 <main+0xac>
			y++;
 14a:	1f 5f       	subi	r17, 0xFF	; 255
			pcd8544_clear();
 14c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <pcd8544_clear>
			sprintf(buffer, "X: %d Y: %d", x, y);
 150:	1f 92       	push	r1
 152:	1f 93       	push	r17
 154:	1f 92       	push	r1
 156:	0f 93       	push	r16
 158:	80 e6       	ldi	r24, 0x60	; 96
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	9f 93       	push	r25
 15e:	8f 93       	push	r24
 160:	ce 01       	movw	r24, r28
 162:	01 96       	adiw	r24, 0x01	; 1
 164:	7c 01       	movw	r14, r24
 166:	9f 93       	push	r25
 168:	8f 93       	push	r24
 16a:	0e 94 ca 01 	call	0x394	; 0x394 <sprintf>
			pcd8544_print_at(buffer, 0, 0);
 16e:	40 e0       	ldi	r20, 0x00	; 0
 170:	60 e0       	ldi	r22, 0x00	; 0
 172:	c7 01       	movw	r24, r14
 174:	0e 94 b9 01 	call	0x372	; 0x372 <pcd8544_print_at>
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	f8 94       	cli
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	0f be       	out	0x3f, r0	; 63
 180:	cd bf       	out	0x3d, r28	; 61
 182:	41 c0       	rjmp	.+130    	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
		}
		// Если кнопка 3 (влево) нажата
		else if (!(btns & (1 << 2)) && x > 0) {
 184:	82 fd       	sbrc	r24, 2
 186:	1f c0       	rjmp	.+62     	; 0x1c6 <main+0xee>
 188:	00 23       	and	r16, r16
 18a:	e9 f0       	breq	.+58     	; 0x1c6 <main+0xee>
			x--;
 18c:	01 50       	subi	r16, 0x01	; 1
			pcd8544_clear();
 18e:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <pcd8544_clear>
			sprintf(buffer, "X: %d Y: %d", x, y);
 192:	1f 92       	push	r1
 194:	1f 93       	push	r17
 196:	1f 92       	push	r1
 198:	0f 93       	push	r16
 19a:	80 e6       	ldi	r24, 0x60	; 96
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	9f 93       	push	r25
 1a0:	8f 93       	push	r24
 1a2:	ce 01       	movw	r24, r28
 1a4:	01 96       	adiw	r24, 0x01	; 1
 1a6:	7c 01       	movw	r14, r24
 1a8:	9f 93       	push	r25
 1aa:	8f 93       	push	r24
 1ac:	0e 94 ca 01 	call	0x394	; 0x394 <sprintf>
			pcd8544_print_at(buffer, 0, 0);
 1b0:	40 e0       	ldi	r20, 0x00	; 0
 1b2:	60 e0       	ldi	r22, 0x00	; 0
 1b4:	c7 01       	movw	r24, r14
 1b6:	0e 94 b9 01 	call	0x372	; 0x372 <pcd8544_print_at>
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	f8 94       	cli
 1be:	de bf       	out	0x3e, r29	; 62
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	cd bf       	out	0x3d, r28	; 61
 1c4:	20 c0       	rjmp	.+64     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
		}
		// Если кнопка 4 (вправо) нажата
		else if (!(btns & (1 << 3)) && x < 11) {
 1c6:	83 fd       	sbrc	r24, 3
 1c8:	1e c0       	rjmp	.+60     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 1ca:	0b 30       	cpi	r16, 0x0B	; 11
 1cc:	e0 f4       	brcc	.+56     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
			x++;
 1ce:	0f 5f       	subi	r16, 0xFF	; 255
			pcd8544_clear();
 1d0:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <pcd8544_clear>
			sprintf(buffer, "X: %d Y: %d", x, y);
 1d4:	1f 92       	push	r1
 1d6:	1f 93       	push	r17
 1d8:	1f 92       	push	r1
 1da:	0f 93       	push	r16
 1dc:	80 e6       	ldi	r24, 0x60	; 96
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	9f 93       	push	r25
 1e2:	8f 93       	push	r24
 1e4:	ce 01       	movw	r24, r28
 1e6:	01 96       	adiw	r24, 0x01	; 1
 1e8:	7c 01       	movw	r14, r24
 1ea:	9f 93       	push	r25
 1ec:	8f 93       	push	r24
 1ee:	0e 94 ca 01 	call	0x394	; 0x394 <sprintf>
			pcd8544_print_at(buffer, 0, 0);
 1f2:	40 e0       	ldi	r20, 0x00	; 0
 1f4:	60 e0       	ldi	r22, 0x00	; 0
 1f6:	c7 01       	movw	r24, r14
 1f8:	0e 94 b9 01 	call	0x372	; 0x372 <pcd8544_print_at>
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	f8 94       	cli
 200:	de bf       	out	0x3e, r29	; 62
 202:	0f be       	out	0x3f, r0	; 63
 204:	cd bf       	out	0x3d, r28	; 61
		}

		// Отображение точки
		pcd8544_set_cursor(x, y);
 206:	61 2f       	mov	r22, r17
 208:	80 2f       	mov	r24, r16
 20a:	0e 94 8d 01 	call	0x31a	; 0x31a <pcd8544_set_cursor>
		pcd8544_send_char('*');
 20e:	8a e2       	ldi	r24, 0x2A	; 42
 210:	0e 94 4e 01 	call	0x29c	; 0x29c <pcd8544_send_char>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 214:	8f e4       	ldi	r24, 0x4F	; 79
 216:	93 ec       	ldi	r25, 0xC3	; 195
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <__EEPROM_REGION_LENGTH__+0x1e>
 21e:	00 00       	nop
 220:	6d cf       	rjmp	.-294    	; 0xfc <main+0x24>

00000222 <pcd8544_send>:

void pcd8544_print_string(char *str) {
	while (*str) {
		pcd8544_send_char(*str++);
	}
}
 222:	81 30       	cpi	r24, 0x01	; 1
 224:	21 f4       	brne	.+8      	; 0x22e <pcd8544_send+0xc>
 226:	88 b3       	in	r24, 0x18	; 24
 228:	88 60       	ori	r24, 0x08	; 8
 22a:	88 bb       	out	0x18, r24	; 24
 22c:	03 c0       	rjmp	.+6      	; 0x234 <pcd8544_send+0x12>
 22e:	88 b3       	in	r24, 0x18	; 24
 230:	87 7f       	andi	r24, 0xF7	; 247
 232:	88 bb       	out	0x18, r24	; 24
 234:	88 b3       	in	r24, 0x18	; 24
 236:	8f 7e       	andi	r24, 0xEF	; 239
 238:	88 bb       	out	0x18, r24	; 24
 23a:	6f b9       	out	0x0f, r22	; 15
 23c:	77 9b       	sbis	0x0e, 7	; 14
 23e:	fe cf       	rjmp	.-4      	; 0x23c <pcd8544_send+0x1a>
 240:	88 b3       	in	r24, 0x18	; 24
 242:	80 61       	ori	r24, 0x10	; 16
 244:	88 bb       	out	0x18, r24	; 24
 246:	08 95       	ret

00000248 <pcd8544_init>:
 248:	87 b3       	in	r24, 0x17	; 23
 24a:	8c 6b       	ori	r24, 0xBC	; 188
 24c:	87 bb       	out	0x17, r24	; 23
 24e:	81 e5       	ldi	r24, 0x51	; 81
 250:	8d b9       	out	0x0d, r24	; 13
 252:	88 b3       	in	r24, 0x18	; 24
 254:	8b 7f       	andi	r24, 0xFB	; 251
 256:	88 bb       	out	0x18, r24	; 24
 258:	87 ea       	ldi	r24, 0xA7	; 167
 25a:	91 e6       	ldi	r25, 0x61	; 97
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	f1 f7       	brne	.-4      	; 0x25c <pcd8544_init+0x14>
 260:	00 c0       	rjmp	.+0      	; 0x262 <pcd8544_init+0x1a>
 262:	00 00       	nop
 264:	88 b3       	in	r24, 0x18	; 24
 266:	84 60       	ori	r24, 0x04	; 4
 268:	88 bb       	out	0x18, r24	; 24
 26a:	61 e2       	ldi	r22, 0x21	; 33
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 272:	6a eb       	ldi	r22, 0xBA	; 186
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 27a:	64 e0       	ldi	r22, 0x04	; 4
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 282:	64 e1       	ldi	r22, 0x14	; 20
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 28a:	60 e2       	ldi	r22, 0x20	; 32
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 292:	6c e0       	ldi	r22, 0x0C	; 12
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 29a:	08 95       	ret

0000029c <pcd8544_send_char>:
 29c:	1f 93       	push	r17
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	90 ee       	ldi	r25, 0xE0	; 224
 2a4:	98 0f       	add	r25, r24
 2a6:	91 36       	cpi	r25, 0x61	; 97
 2a8:	18 f5       	brcc	.+70     	; 0x2f0 <pcd8544_send_char+0x54>
 2aa:	18 2f       	mov	r17, r24
 2ac:	60 e0       	ldi	r22, 0x00	; 0
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 2b4:	c0 e0       	ldi	r28, 0x00	; 0
 2b6:	d0 e0       	ldi	r29, 0x00	; 0
 2b8:	14 c0       	rjmp	.+40     	; 0x2e2 <pcd8544_send_char+0x46>
 2ba:	21 2f       	mov	r18, r17
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	20 52       	subi	r18, 0x20	; 32
 2c0:	31 09       	sbc	r19, r1
 2c2:	f9 01       	movw	r30, r18
 2c4:	ee 0f       	add	r30, r30
 2c6:	ff 1f       	adc	r31, r31
 2c8:	ee 0f       	add	r30, r30
 2ca:	ff 1f       	adc	r31, r31
 2cc:	e2 0f       	add	r30, r18
 2ce:	f3 1f       	adc	r31, r19
 2d0:	e4 59       	subi	r30, 0x94	; 148
 2d2:	ff 4f       	sbci	r31, 0xFF	; 255
 2d4:	ec 0f       	add	r30, r28
 2d6:	fd 1f       	adc	r31, r29
 2d8:	60 81       	ld	r22, Z
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 2e0:	21 96       	adiw	r28, 0x01	; 1
 2e2:	c5 30       	cpi	r28, 0x05	; 5
 2e4:	d1 05       	cpc	r29, r1
 2e6:	4c f3       	brlt	.-46     	; 0x2ba <pcd8544_send_char+0x1e>
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
 2f0:	df 91       	pop	r29
 2f2:	cf 91       	pop	r28
 2f4:	1f 91       	pop	r17
 2f6:	08 95       	ret

000002f8 <pcd8544_clear>:
		}
		pcd8544_send(LCD_D, 0x00);
	}
}

void pcd8544_clear(void) {
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
	for (int i = 0; i < LCD_X * LCD_Y / 8; i++) {
 2fc:	c0 e0       	ldi	r28, 0x00	; 0
 2fe:	d0 e0       	ldi	r29, 0x00	; 0
 300:	05 c0       	rjmp	.+10     	; 0x30c <pcd8544_clear+0x14>
		pcd8544_send(LCD_D, 0x00);
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
		pcd8544_send(LCD_D, 0x00);
	}
}

void pcd8544_clear(void) {
	for (int i = 0; i < LCD_X * LCD_Y / 8; i++) {
 30a:	21 96       	adiw	r28, 0x01	; 1
 30c:	c8 3f       	cpi	r28, 0xF8	; 248
 30e:	81 e0       	ldi	r24, 0x01	; 1
 310:	d8 07       	cpc	r29, r24
 312:	bc f3       	brlt	.-18     	; 0x302 <pcd8544_clear+0xa>
		pcd8544_send(LCD_D, 0x00);
	}
}
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	08 95       	ret

0000031a <pcd8544_set_cursor>:

void pcd8544_set_cursor(uint8_t x, uint8_t y) {
 31a:	cf 93       	push	r28
	x = x % 12; y = y % 6;
 31c:	9b ea       	ldi	r25, 0xAB	; 171
 31e:	89 9f       	mul	r24, r25
 320:	c1 2d       	mov	r28, r1
 322:	11 24       	eor	r1, r1
 324:	c6 95       	lsr	r28
 326:	c6 95       	lsr	r28
 328:	c6 95       	lsr	r28
 32a:	2c 2f       	mov	r18, r28
 32c:	22 0f       	add	r18, r18
 32e:	c2 0f       	add	r28, r18
 330:	2c 2f       	mov	r18, r28
 332:	22 0f       	add	r18, r18
 334:	22 0f       	add	r18, r18
 336:	c8 2f       	mov	r28, r24
 338:	c2 1b       	sub	r28, r18
 33a:	69 9f       	mul	r22, r25
 33c:	81 2d       	mov	r24, r1
 33e:	11 24       	eor	r1, r1
 340:	86 95       	lsr	r24
 342:	86 95       	lsr	r24
 344:	98 2f       	mov	r25, r24
 346:	99 0f       	add	r25, r25
 348:	89 0f       	add	r24, r25
 34a:	98 2f       	mov	r25, r24
 34c:	99 0f       	add	r25, r25
 34e:	86 2f       	mov	r24, r22
 350:	89 1b       	sub	r24, r25
	pcd8544_send(LCD_C, 0x40 + y);
 352:	60 e4       	ldi	r22, 0x40	; 64
 354:	68 0f       	add	r22, r24
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
	pcd8544_send(LCD_C, 0x80 + x * 7);
 35c:	6c 2f       	mov	r22, r28
 35e:	66 0f       	add	r22, r22
 360:	66 0f       	add	r22, r22
 362:	66 0f       	add	r22, r22
 364:	6c 1b       	sub	r22, r28
 366:	60 58       	subi	r22, 0x80	; 128
 368:	80 e0       	ldi	r24, 0x00	; 0
 36a:	0e 94 11 01 	call	0x222	; 0x222 <pcd8544_send>
}
 36e:	cf 91       	pop	r28
 370:	08 95       	ret

00000372 <pcd8544_print_at>:

void pcd8544_print_at(char *str, uint8_t x, uint8_t y) {
 372:	cf 93       	push	r28
 374:	df 93       	push	r29
 376:	ec 01       	movw	r28, r24
 378:	86 2f       	mov	r24, r22
	pcd8544_set_cursor(x, y);
 37a:	64 2f       	mov	r22, r20
 37c:	0e 94 8d 01 	call	0x31a	; 0x31a <pcd8544_set_cursor>
	while (*str) {
 380:	03 c0       	rjmp	.+6      	; 0x388 <pcd8544_print_at+0x16>
		pcd8544_send_char(*str++);
 382:	21 96       	adiw	r28, 0x01	; 1
 384:	0e 94 4e 01 	call	0x29c	; 0x29c <pcd8544_send_char>
	pcd8544_send(LCD_C, 0x80 + x * 7);
}

void pcd8544_print_at(char *str, uint8_t x, uint8_t y) {
	pcd8544_set_cursor(x, y);
	while (*str) {
 388:	88 81       	ld	r24, Y
 38a:	81 11       	cpse	r24, r1
 38c:	fa cf       	rjmp	.-12     	; 0x382 <pcd8544_print_at+0x10>
		pcd8544_send_char(*str++);
	}
}
 38e:	df 91       	pop	r29
 390:	cf 91       	pop	r28
 392:	08 95       	ret

00000394 <sprintf>:
 394:	ae e0       	ldi	r26, 0x0E	; 14
 396:	b0 e0       	ldi	r27, 0x00	; 0
 398:	e0 ed       	ldi	r30, 0xD0	; 208
 39a:	f1 e0       	ldi	r31, 0x01	; 1
 39c:	0c 94 8b 04 	jmp	0x916	; 0x916 <__prologue_saves__+0x1c>
 3a0:	0d 89       	ldd	r16, Y+21	; 0x15
 3a2:	1e 89       	ldd	r17, Y+22	; 0x16
 3a4:	86 e0       	ldi	r24, 0x06	; 6
 3a6:	8c 83       	std	Y+4, r24	; 0x04
 3a8:	1a 83       	std	Y+2, r17	; 0x02
 3aa:	09 83       	std	Y+1, r16	; 0x01
 3ac:	8f ef       	ldi	r24, 0xFF	; 255
 3ae:	9f e7       	ldi	r25, 0x7F	; 127
 3b0:	9e 83       	std	Y+6, r25	; 0x06
 3b2:	8d 83       	std	Y+5, r24	; 0x05
 3b4:	ae 01       	movw	r20, r28
 3b6:	47 5e       	subi	r20, 0xE7	; 231
 3b8:	5f 4f       	sbci	r21, 0xFF	; 255
 3ba:	6f 89       	ldd	r22, Y+23	; 0x17
 3bc:	78 8d       	ldd	r23, Y+24	; 0x18
 3be:	ce 01       	movw	r24, r28
 3c0:	01 96       	adiw	r24, 0x01	; 1
 3c2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <vfprintf>
 3c6:	ef 81       	ldd	r30, Y+7	; 0x07
 3c8:	f8 85       	ldd	r31, Y+8	; 0x08
 3ca:	e0 0f       	add	r30, r16
 3cc:	f1 1f       	adc	r31, r17
 3ce:	10 82       	st	Z, r1
 3d0:	2e 96       	adiw	r28, 0x0e	; 14
 3d2:	e4 e0       	ldi	r30, 0x04	; 4
 3d4:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__epilogue_restores__+0x1c>

000003d8 <vfprintf>:
 3d8:	ab e0       	ldi	r26, 0x0B	; 11
 3da:	b0 e0       	ldi	r27, 0x00	; 0
 3dc:	e2 ef       	ldi	r30, 0xF2	; 242
 3de:	f1 e0       	ldi	r31, 0x01	; 1
 3e0:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__prologue_saves__>
 3e4:	6c 01       	movw	r12, r24
 3e6:	7b 01       	movw	r14, r22
 3e8:	8a 01       	movw	r16, r20
 3ea:	fc 01       	movw	r30, r24
 3ec:	17 82       	std	Z+7, r1	; 0x07
 3ee:	16 82       	std	Z+6, r1	; 0x06
 3f0:	83 81       	ldd	r24, Z+3	; 0x03
 3f2:	81 ff       	sbrs	r24, 1
 3f4:	cc c1       	rjmp	.+920    	; 0x78e <__stack+0x32f>
 3f6:	ce 01       	movw	r24, r28
 3f8:	01 96       	adiw	r24, 0x01	; 1
 3fa:	3c 01       	movw	r6, r24
 3fc:	f6 01       	movw	r30, r12
 3fe:	93 81       	ldd	r25, Z+3	; 0x03
 400:	f7 01       	movw	r30, r14
 402:	93 fd       	sbrc	r25, 3
 404:	85 91       	lpm	r24, Z+
 406:	93 ff       	sbrs	r25, 3
 408:	81 91       	ld	r24, Z+
 40a:	7f 01       	movw	r14, r30
 40c:	88 23       	and	r24, r24
 40e:	09 f4       	brne	.+2      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 410:	ba c1       	rjmp	.+884    	; 0x786 <__stack+0x327>
 412:	85 32       	cpi	r24, 0x25	; 37
 414:	39 f4       	brne	.+14     	; 0x424 <__DATA_REGION_LENGTH__+0x24>
 416:	93 fd       	sbrc	r25, 3
 418:	85 91       	lpm	r24, Z+
 41a:	93 ff       	sbrs	r25, 3
 41c:	81 91       	ld	r24, Z+
 41e:	7f 01       	movw	r14, r30
 420:	85 32       	cpi	r24, 0x25	; 37
 422:	29 f4       	brne	.+10     	; 0x42e <__DATA_REGION_LENGTH__+0x2e>
 424:	b6 01       	movw	r22, r12
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 42c:	e7 cf       	rjmp	.-50     	; 0x3fc <vfprintf+0x24>
 42e:	91 2c       	mov	r9, r1
 430:	21 2c       	mov	r2, r1
 432:	31 2c       	mov	r3, r1
 434:	ff e1       	ldi	r31, 0x1F	; 31
 436:	f3 15       	cp	r31, r3
 438:	d8 f0       	brcs	.+54     	; 0x470 <__stack+0x11>
 43a:	8b 32       	cpi	r24, 0x2B	; 43
 43c:	79 f0       	breq	.+30     	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
 43e:	38 f4       	brcc	.+14     	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
 440:	80 32       	cpi	r24, 0x20	; 32
 442:	79 f0       	breq	.+30     	; 0x462 <__stack+0x3>
 444:	83 32       	cpi	r24, 0x23	; 35
 446:	a1 f4       	brne	.+40     	; 0x470 <__stack+0x11>
 448:	23 2d       	mov	r18, r3
 44a:	20 61       	ori	r18, 0x10	; 16
 44c:	1d c0       	rjmp	.+58     	; 0x488 <__stack+0x29>
 44e:	8d 32       	cpi	r24, 0x2D	; 45
 450:	61 f0       	breq	.+24     	; 0x46a <__stack+0xb>
 452:	80 33       	cpi	r24, 0x30	; 48
 454:	69 f4       	brne	.+26     	; 0x470 <__stack+0x11>
 456:	23 2d       	mov	r18, r3
 458:	21 60       	ori	r18, 0x01	; 1
 45a:	16 c0       	rjmp	.+44     	; 0x488 <__stack+0x29>
 45c:	83 2d       	mov	r24, r3
 45e:	82 60       	ori	r24, 0x02	; 2
 460:	38 2e       	mov	r3, r24
 462:	e3 2d       	mov	r30, r3
 464:	e4 60       	ori	r30, 0x04	; 4
 466:	3e 2e       	mov	r3, r30
 468:	2a c0       	rjmp	.+84     	; 0x4be <__stack+0x5f>
 46a:	f3 2d       	mov	r31, r3
 46c:	f8 60       	ori	r31, 0x08	; 8
 46e:	1d c0       	rjmp	.+58     	; 0x4aa <__stack+0x4b>
 470:	37 fc       	sbrc	r3, 7
 472:	2d c0       	rjmp	.+90     	; 0x4ce <__stack+0x6f>
 474:	20 ed       	ldi	r18, 0xD0	; 208
 476:	28 0f       	add	r18, r24
 478:	2a 30       	cpi	r18, 0x0A	; 10
 47a:	40 f0       	brcs	.+16     	; 0x48c <__stack+0x2d>
 47c:	8e 32       	cpi	r24, 0x2E	; 46
 47e:	b9 f4       	brne	.+46     	; 0x4ae <__stack+0x4f>
 480:	36 fc       	sbrc	r3, 6
 482:	81 c1       	rjmp	.+770    	; 0x786 <__stack+0x327>
 484:	23 2d       	mov	r18, r3
 486:	20 64       	ori	r18, 0x40	; 64
 488:	32 2e       	mov	r3, r18
 48a:	19 c0       	rjmp	.+50     	; 0x4be <__stack+0x5f>
 48c:	36 fe       	sbrs	r3, 6
 48e:	06 c0       	rjmp	.+12     	; 0x49c <__stack+0x3d>
 490:	8a e0       	ldi	r24, 0x0A	; 10
 492:	98 9e       	mul	r9, r24
 494:	20 0d       	add	r18, r0
 496:	11 24       	eor	r1, r1
 498:	92 2e       	mov	r9, r18
 49a:	11 c0       	rjmp	.+34     	; 0x4be <__stack+0x5f>
 49c:	ea e0       	ldi	r30, 0x0A	; 10
 49e:	2e 9e       	mul	r2, r30
 4a0:	20 0d       	add	r18, r0
 4a2:	11 24       	eor	r1, r1
 4a4:	22 2e       	mov	r2, r18
 4a6:	f3 2d       	mov	r31, r3
 4a8:	f0 62       	ori	r31, 0x20	; 32
 4aa:	3f 2e       	mov	r3, r31
 4ac:	08 c0       	rjmp	.+16     	; 0x4be <__stack+0x5f>
 4ae:	8c 36       	cpi	r24, 0x6C	; 108
 4b0:	21 f4       	brne	.+8      	; 0x4ba <__stack+0x5b>
 4b2:	83 2d       	mov	r24, r3
 4b4:	80 68       	ori	r24, 0x80	; 128
 4b6:	38 2e       	mov	r3, r24
 4b8:	02 c0       	rjmp	.+4      	; 0x4be <__stack+0x5f>
 4ba:	88 36       	cpi	r24, 0x68	; 104
 4bc:	41 f4       	brne	.+16     	; 0x4ce <__stack+0x6f>
 4be:	f7 01       	movw	r30, r14
 4c0:	93 fd       	sbrc	r25, 3
 4c2:	85 91       	lpm	r24, Z+
 4c4:	93 ff       	sbrs	r25, 3
 4c6:	81 91       	ld	r24, Z+
 4c8:	7f 01       	movw	r14, r30
 4ca:	81 11       	cpse	r24, r1
 4cc:	b3 cf       	rjmp	.-154    	; 0x434 <__DATA_REGION_LENGTH__+0x34>
 4ce:	98 2f       	mov	r25, r24
 4d0:	9f 7d       	andi	r25, 0xDF	; 223
 4d2:	95 54       	subi	r25, 0x45	; 69
 4d4:	93 30       	cpi	r25, 0x03	; 3
 4d6:	28 f4       	brcc	.+10     	; 0x4e2 <__stack+0x83>
 4d8:	0c 5f       	subi	r16, 0xFC	; 252
 4da:	1f 4f       	sbci	r17, 0xFF	; 255
 4dc:	9f e3       	ldi	r25, 0x3F	; 63
 4de:	99 83       	std	Y+1, r25	; 0x01
 4e0:	0d c0       	rjmp	.+26     	; 0x4fc <__stack+0x9d>
 4e2:	83 36       	cpi	r24, 0x63	; 99
 4e4:	31 f0       	breq	.+12     	; 0x4f2 <__stack+0x93>
 4e6:	83 37       	cpi	r24, 0x73	; 115
 4e8:	71 f0       	breq	.+28     	; 0x506 <__stack+0xa7>
 4ea:	83 35       	cpi	r24, 0x53	; 83
 4ec:	09 f0       	breq	.+2      	; 0x4f0 <__stack+0x91>
 4ee:	59 c0       	rjmp	.+178    	; 0x5a2 <__stack+0x143>
 4f0:	21 c0       	rjmp	.+66     	; 0x534 <__stack+0xd5>
 4f2:	f8 01       	movw	r30, r16
 4f4:	80 81       	ld	r24, Z
 4f6:	89 83       	std	Y+1, r24	; 0x01
 4f8:	0e 5f       	subi	r16, 0xFE	; 254
 4fa:	1f 4f       	sbci	r17, 0xFF	; 255
 4fc:	88 24       	eor	r8, r8
 4fe:	83 94       	inc	r8
 500:	91 2c       	mov	r9, r1
 502:	53 01       	movw	r10, r6
 504:	13 c0       	rjmp	.+38     	; 0x52c <__stack+0xcd>
 506:	28 01       	movw	r4, r16
 508:	f2 e0       	ldi	r31, 0x02	; 2
 50a:	4f 0e       	add	r4, r31
 50c:	51 1c       	adc	r5, r1
 50e:	f8 01       	movw	r30, r16
 510:	a0 80       	ld	r10, Z
 512:	b1 80       	ldd	r11, Z+1	; 0x01
 514:	36 fe       	sbrs	r3, 6
 516:	03 c0       	rjmp	.+6      	; 0x51e <__stack+0xbf>
 518:	69 2d       	mov	r22, r9
 51a:	70 e0       	ldi	r23, 0x00	; 0
 51c:	02 c0       	rjmp	.+4      	; 0x522 <__stack+0xc3>
 51e:	6f ef       	ldi	r22, 0xFF	; 255
 520:	7f ef       	ldi	r23, 0xFF	; 255
 522:	c5 01       	movw	r24, r10
 524:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <strnlen>
 528:	4c 01       	movw	r8, r24
 52a:	82 01       	movw	r16, r4
 52c:	f3 2d       	mov	r31, r3
 52e:	ff 77       	andi	r31, 0x7F	; 127
 530:	3f 2e       	mov	r3, r31
 532:	16 c0       	rjmp	.+44     	; 0x560 <__stack+0x101>
 534:	28 01       	movw	r4, r16
 536:	22 e0       	ldi	r18, 0x02	; 2
 538:	42 0e       	add	r4, r18
 53a:	51 1c       	adc	r5, r1
 53c:	f8 01       	movw	r30, r16
 53e:	a0 80       	ld	r10, Z
 540:	b1 80       	ldd	r11, Z+1	; 0x01
 542:	36 fe       	sbrs	r3, 6
 544:	03 c0       	rjmp	.+6      	; 0x54c <__stack+0xed>
 546:	69 2d       	mov	r22, r9
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	02 c0       	rjmp	.+4      	; 0x550 <__stack+0xf1>
 54c:	6f ef       	ldi	r22, 0xFF	; 255
 54e:	7f ef       	ldi	r23, 0xFF	; 255
 550:	c5 01       	movw	r24, r10
 552:	0e 94 cd 03 	call	0x79a	; 0x79a <strnlen_P>
 556:	4c 01       	movw	r8, r24
 558:	f3 2d       	mov	r31, r3
 55a:	f0 68       	ori	r31, 0x80	; 128
 55c:	3f 2e       	mov	r3, r31
 55e:	82 01       	movw	r16, r4
 560:	33 fc       	sbrc	r3, 3
 562:	1b c0       	rjmp	.+54     	; 0x59a <__stack+0x13b>
 564:	82 2d       	mov	r24, r2
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	88 16       	cp	r8, r24
 56a:	99 06       	cpc	r9, r25
 56c:	b0 f4       	brcc	.+44     	; 0x59a <__stack+0x13b>
 56e:	b6 01       	movw	r22, r12
 570:	80 e2       	ldi	r24, 0x20	; 32
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 578:	2a 94       	dec	r2
 57a:	f4 cf       	rjmp	.-24     	; 0x564 <__stack+0x105>
 57c:	f5 01       	movw	r30, r10
 57e:	37 fc       	sbrc	r3, 7
 580:	85 91       	lpm	r24, Z+
 582:	37 fe       	sbrs	r3, 7
 584:	81 91       	ld	r24, Z+
 586:	5f 01       	movw	r10, r30
 588:	b6 01       	movw	r22, r12
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 590:	21 10       	cpse	r2, r1
 592:	2a 94       	dec	r2
 594:	21 e0       	ldi	r18, 0x01	; 1
 596:	82 1a       	sub	r8, r18
 598:	91 08       	sbc	r9, r1
 59a:	81 14       	cp	r8, r1
 59c:	91 04       	cpc	r9, r1
 59e:	71 f7       	brne	.-36     	; 0x57c <__stack+0x11d>
 5a0:	e8 c0       	rjmp	.+464    	; 0x772 <__stack+0x313>
 5a2:	84 36       	cpi	r24, 0x64	; 100
 5a4:	11 f0       	breq	.+4      	; 0x5aa <__stack+0x14b>
 5a6:	89 36       	cpi	r24, 0x69	; 105
 5a8:	41 f5       	brne	.+80     	; 0x5fa <__stack+0x19b>
 5aa:	f8 01       	movw	r30, r16
 5ac:	37 fe       	sbrs	r3, 7
 5ae:	07 c0       	rjmp	.+14     	; 0x5be <__stack+0x15f>
 5b0:	60 81       	ld	r22, Z
 5b2:	71 81       	ldd	r23, Z+1	; 0x01
 5b4:	82 81       	ldd	r24, Z+2	; 0x02
 5b6:	93 81       	ldd	r25, Z+3	; 0x03
 5b8:	0c 5f       	subi	r16, 0xFC	; 252
 5ba:	1f 4f       	sbci	r17, 0xFF	; 255
 5bc:	08 c0       	rjmp	.+16     	; 0x5ce <__stack+0x16f>
 5be:	60 81       	ld	r22, Z
 5c0:	71 81       	ldd	r23, Z+1	; 0x01
 5c2:	07 2e       	mov	r0, r23
 5c4:	00 0c       	add	r0, r0
 5c6:	88 0b       	sbc	r24, r24
 5c8:	99 0b       	sbc	r25, r25
 5ca:	0e 5f       	subi	r16, 0xFE	; 254
 5cc:	1f 4f       	sbci	r17, 0xFF	; 255
 5ce:	f3 2d       	mov	r31, r3
 5d0:	ff 76       	andi	r31, 0x6F	; 111
 5d2:	3f 2e       	mov	r3, r31
 5d4:	97 ff       	sbrs	r25, 7
 5d6:	09 c0       	rjmp	.+18     	; 0x5ea <__stack+0x18b>
 5d8:	90 95       	com	r25
 5da:	80 95       	com	r24
 5dc:	70 95       	com	r23
 5de:	61 95       	neg	r22
 5e0:	7f 4f       	sbci	r23, 0xFF	; 255
 5e2:	8f 4f       	sbci	r24, 0xFF	; 255
 5e4:	9f 4f       	sbci	r25, 0xFF	; 255
 5e6:	f0 68       	ori	r31, 0x80	; 128
 5e8:	3f 2e       	mov	r3, r31
 5ea:	2a e0       	ldi	r18, 0x0A	; 10
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	a3 01       	movw	r20, r6
 5f0:	0e 94 1f 04 	call	0x83e	; 0x83e <__ultoa_invert>
 5f4:	88 2e       	mov	r8, r24
 5f6:	86 18       	sub	r8, r6
 5f8:	45 c0       	rjmp	.+138    	; 0x684 <__stack+0x225>
 5fa:	85 37       	cpi	r24, 0x75	; 117
 5fc:	31 f4       	brne	.+12     	; 0x60a <__stack+0x1ab>
 5fe:	23 2d       	mov	r18, r3
 600:	2f 7e       	andi	r18, 0xEF	; 239
 602:	b2 2e       	mov	r11, r18
 604:	2a e0       	ldi	r18, 0x0A	; 10
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	25 c0       	rjmp	.+74     	; 0x654 <__stack+0x1f5>
 60a:	93 2d       	mov	r25, r3
 60c:	99 7f       	andi	r25, 0xF9	; 249
 60e:	b9 2e       	mov	r11, r25
 610:	8f 36       	cpi	r24, 0x6F	; 111
 612:	c1 f0       	breq	.+48     	; 0x644 <__stack+0x1e5>
 614:	18 f4       	brcc	.+6      	; 0x61c <__stack+0x1bd>
 616:	88 35       	cpi	r24, 0x58	; 88
 618:	79 f0       	breq	.+30     	; 0x638 <__stack+0x1d9>
 61a:	b5 c0       	rjmp	.+362    	; 0x786 <__stack+0x327>
 61c:	80 37       	cpi	r24, 0x70	; 112
 61e:	19 f0       	breq	.+6      	; 0x626 <__stack+0x1c7>
 620:	88 37       	cpi	r24, 0x78	; 120
 622:	21 f0       	breq	.+8      	; 0x62c <__stack+0x1cd>
 624:	b0 c0       	rjmp	.+352    	; 0x786 <__stack+0x327>
 626:	e9 2f       	mov	r30, r25
 628:	e0 61       	ori	r30, 0x10	; 16
 62a:	be 2e       	mov	r11, r30
 62c:	b4 fe       	sbrs	r11, 4
 62e:	0d c0       	rjmp	.+26     	; 0x64a <__stack+0x1eb>
 630:	fb 2d       	mov	r31, r11
 632:	f4 60       	ori	r31, 0x04	; 4
 634:	bf 2e       	mov	r11, r31
 636:	09 c0       	rjmp	.+18     	; 0x64a <__stack+0x1eb>
 638:	34 fe       	sbrs	r3, 4
 63a:	0a c0       	rjmp	.+20     	; 0x650 <__stack+0x1f1>
 63c:	29 2f       	mov	r18, r25
 63e:	26 60       	ori	r18, 0x06	; 6
 640:	b2 2e       	mov	r11, r18
 642:	06 c0       	rjmp	.+12     	; 0x650 <__stack+0x1f1>
 644:	28 e0       	ldi	r18, 0x08	; 8
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	05 c0       	rjmp	.+10     	; 0x654 <__stack+0x1f5>
 64a:	20 e1       	ldi	r18, 0x10	; 16
 64c:	30 e0       	ldi	r19, 0x00	; 0
 64e:	02 c0       	rjmp	.+4      	; 0x654 <__stack+0x1f5>
 650:	20 e1       	ldi	r18, 0x10	; 16
 652:	32 e0       	ldi	r19, 0x02	; 2
 654:	f8 01       	movw	r30, r16
 656:	b7 fe       	sbrs	r11, 7
 658:	07 c0       	rjmp	.+14     	; 0x668 <__stack+0x209>
 65a:	60 81       	ld	r22, Z
 65c:	71 81       	ldd	r23, Z+1	; 0x01
 65e:	82 81       	ldd	r24, Z+2	; 0x02
 660:	93 81       	ldd	r25, Z+3	; 0x03
 662:	0c 5f       	subi	r16, 0xFC	; 252
 664:	1f 4f       	sbci	r17, 0xFF	; 255
 666:	06 c0       	rjmp	.+12     	; 0x674 <__stack+0x215>
 668:	60 81       	ld	r22, Z
 66a:	71 81       	ldd	r23, Z+1	; 0x01
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	0e 5f       	subi	r16, 0xFE	; 254
 672:	1f 4f       	sbci	r17, 0xFF	; 255
 674:	a3 01       	movw	r20, r6
 676:	0e 94 1f 04 	call	0x83e	; 0x83e <__ultoa_invert>
 67a:	88 2e       	mov	r8, r24
 67c:	86 18       	sub	r8, r6
 67e:	fb 2d       	mov	r31, r11
 680:	ff 77       	andi	r31, 0x7F	; 127
 682:	3f 2e       	mov	r3, r31
 684:	36 fe       	sbrs	r3, 6
 686:	0d c0       	rjmp	.+26     	; 0x6a2 <__stack+0x243>
 688:	23 2d       	mov	r18, r3
 68a:	2e 7f       	andi	r18, 0xFE	; 254
 68c:	a2 2e       	mov	r10, r18
 68e:	89 14       	cp	r8, r9
 690:	58 f4       	brcc	.+22     	; 0x6a8 <__stack+0x249>
 692:	34 fe       	sbrs	r3, 4
 694:	0b c0       	rjmp	.+22     	; 0x6ac <__stack+0x24d>
 696:	32 fc       	sbrc	r3, 2
 698:	09 c0       	rjmp	.+18     	; 0x6ac <__stack+0x24d>
 69a:	83 2d       	mov	r24, r3
 69c:	8e 7e       	andi	r24, 0xEE	; 238
 69e:	a8 2e       	mov	r10, r24
 6a0:	05 c0       	rjmp	.+10     	; 0x6ac <__stack+0x24d>
 6a2:	b8 2c       	mov	r11, r8
 6a4:	a3 2c       	mov	r10, r3
 6a6:	03 c0       	rjmp	.+6      	; 0x6ae <__stack+0x24f>
 6a8:	b8 2c       	mov	r11, r8
 6aa:	01 c0       	rjmp	.+2      	; 0x6ae <__stack+0x24f>
 6ac:	b9 2c       	mov	r11, r9
 6ae:	a4 fe       	sbrs	r10, 4
 6b0:	0f c0       	rjmp	.+30     	; 0x6d0 <__stack+0x271>
 6b2:	fe 01       	movw	r30, r28
 6b4:	e8 0d       	add	r30, r8
 6b6:	f1 1d       	adc	r31, r1
 6b8:	80 81       	ld	r24, Z
 6ba:	80 33       	cpi	r24, 0x30	; 48
 6bc:	21 f4       	brne	.+8      	; 0x6c6 <__stack+0x267>
 6be:	9a 2d       	mov	r25, r10
 6c0:	99 7e       	andi	r25, 0xE9	; 233
 6c2:	a9 2e       	mov	r10, r25
 6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <__stack+0x279>
 6c6:	a2 fe       	sbrs	r10, 2
 6c8:	06 c0       	rjmp	.+12     	; 0x6d6 <__stack+0x277>
 6ca:	b3 94       	inc	r11
 6cc:	b3 94       	inc	r11
 6ce:	04 c0       	rjmp	.+8      	; 0x6d8 <__stack+0x279>
 6d0:	8a 2d       	mov	r24, r10
 6d2:	86 78       	andi	r24, 0x86	; 134
 6d4:	09 f0       	breq	.+2      	; 0x6d8 <__stack+0x279>
 6d6:	b3 94       	inc	r11
 6d8:	a3 fc       	sbrc	r10, 3
 6da:	11 c0       	rjmp	.+34     	; 0x6fe <__stack+0x29f>
 6dc:	a0 fe       	sbrs	r10, 0
 6de:	06 c0       	rjmp	.+12     	; 0x6ec <__stack+0x28d>
 6e0:	b2 14       	cp	r11, r2
 6e2:	88 f4       	brcc	.+34     	; 0x706 <__stack+0x2a7>
 6e4:	28 0c       	add	r2, r8
 6e6:	92 2c       	mov	r9, r2
 6e8:	9b 18       	sub	r9, r11
 6ea:	0e c0       	rjmp	.+28     	; 0x708 <__stack+0x2a9>
 6ec:	b2 14       	cp	r11, r2
 6ee:	60 f4       	brcc	.+24     	; 0x708 <__stack+0x2a9>
 6f0:	b6 01       	movw	r22, r12
 6f2:	80 e2       	ldi	r24, 0x20	; 32
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 6fa:	b3 94       	inc	r11
 6fc:	f7 cf       	rjmp	.-18     	; 0x6ec <__stack+0x28d>
 6fe:	b2 14       	cp	r11, r2
 700:	18 f4       	brcc	.+6      	; 0x708 <__stack+0x2a9>
 702:	2b 18       	sub	r2, r11
 704:	02 c0       	rjmp	.+4      	; 0x70a <__stack+0x2ab>
 706:	98 2c       	mov	r9, r8
 708:	21 2c       	mov	r2, r1
 70a:	a4 fe       	sbrs	r10, 4
 70c:	10 c0       	rjmp	.+32     	; 0x72e <__stack+0x2cf>
 70e:	b6 01       	movw	r22, r12
 710:	80 e3       	ldi	r24, 0x30	; 48
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 718:	a2 fe       	sbrs	r10, 2
 71a:	17 c0       	rjmp	.+46     	; 0x74a <__stack+0x2eb>
 71c:	a1 fc       	sbrc	r10, 1
 71e:	03 c0       	rjmp	.+6      	; 0x726 <__stack+0x2c7>
 720:	88 e7       	ldi	r24, 0x78	; 120
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	02 c0       	rjmp	.+4      	; 0x72a <__stack+0x2cb>
 726:	88 e5       	ldi	r24, 0x58	; 88
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	b6 01       	movw	r22, r12
 72c:	0c c0       	rjmp	.+24     	; 0x746 <__stack+0x2e7>
 72e:	8a 2d       	mov	r24, r10
 730:	86 78       	andi	r24, 0x86	; 134
 732:	59 f0       	breq	.+22     	; 0x74a <__stack+0x2eb>
 734:	a1 fe       	sbrs	r10, 1
 736:	02 c0       	rjmp	.+4      	; 0x73c <__stack+0x2dd>
 738:	8b e2       	ldi	r24, 0x2B	; 43
 73a:	01 c0       	rjmp	.+2      	; 0x73e <__stack+0x2df>
 73c:	80 e2       	ldi	r24, 0x20	; 32
 73e:	a7 fc       	sbrc	r10, 7
 740:	8d e2       	ldi	r24, 0x2D	; 45
 742:	b6 01       	movw	r22, r12
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 74a:	89 14       	cp	r8, r9
 74c:	38 f4       	brcc	.+14     	; 0x75c <__stack+0x2fd>
 74e:	b6 01       	movw	r22, r12
 750:	80 e3       	ldi	r24, 0x30	; 48
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 758:	9a 94       	dec	r9
 75a:	f7 cf       	rjmp	.-18     	; 0x74a <__stack+0x2eb>
 75c:	8a 94       	dec	r8
 75e:	f3 01       	movw	r30, r6
 760:	e8 0d       	add	r30, r8
 762:	f1 1d       	adc	r31, r1
 764:	80 81       	ld	r24, Z
 766:	b6 01       	movw	r22, r12
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 76e:	81 10       	cpse	r8, r1
 770:	f5 cf       	rjmp	.-22     	; 0x75c <__stack+0x2fd>
 772:	22 20       	and	r2, r2
 774:	09 f4       	brne	.+2      	; 0x778 <__stack+0x319>
 776:	42 ce       	rjmp	.-892    	; 0x3fc <vfprintf+0x24>
 778:	b6 01       	movw	r22, r12
 77a:	80 e2       	ldi	r24, 0x20	; 32
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <fputc>
 782:	2a 94       	dec	r2
 784:	f6 cf       	rjmp	.-20     	; 0x772 <__stack+0x313>
 786:	f6 01       	movw	r30, r12
 788:	86 81       	ldd	r24, Z+6	; 0x06
 78a:	97 81       	ldd	r25, Z+7	; 0x07
 78c:	02 c0       	rjmp	.+4      	; 0x792 <__stack+0x333>
 78e:	8f ef       	ldi	r24, 0xFF	; 255
 790:	9f ef       	ldi	r25, 0xFF	; 255
 792:	2b 96       	adiw	r28, 0x0b	; 11
 794:	e2 e1       	ldi	r30, 0x12	; 18
 796:	0c 94 99 04 	jmp	0x932	; 0x932 <__epilogue_restores__>

0000079a <strnlen_P>:
 79a:	fc 01       	movw	r30, r24
 79c:	05 90       	lpm	r0, Z+
 79e:	61 50       	subi	r22, 0x01	; 1
 7a0:	70 40       	sbci	r23, 0x00	; 0
 7a2:	01 10       	cpse	r0, r1
 7a4:	d8 f7       	brcc	.-10     	; 0x79c <strnlen_P+0x2>
 7a6:	80 95       	com	r24
 7a8:	90 95       	com	r25
 7aa:	8e 0f       	add	r24, r30
 7ac:	9f 1f       	adc	r25, r31
 7ae:	08 95       	ret

000007b0 <strnlen>:
 7b0:	fc 01       	movw	r30, r24
 7b2:	61 50       	subi	r22, 0x01	; 1
 7b4:	70 40       	sbci	r23, 0x00	; 0
 7b6:	01 90       	ld	r0, Z+
 7b8:	01 10       	cpse	r0, r1
 7ba:	d8 f7       	brcc	.-10     	; 0x7b2 <strnlen+0x2>
 7bc:	80 95       	com	r24
 7be:	90 95       	com	r25
 7c0:	8e 0f       	add	r24, r30
 7c2:	9f 1f       	adc	r25, r31
 7c4:	08 95       	ret

000007c6 <fputc>:
 7c6:	0f 93       	push	r16
 7c8:	1f 93       	push	r17
 7ca:	cf 93       	push	r28
 7cc:	df 93       	push	r29
 7ce:	fb 01       	movw	r30, r22
 7d0:	23 81       	ldd	r18, Z+3	; 0x03
 7d2:	21 fd       	sbrc	r18, 1
 7d4:	03 c0       	rjmp	.+6      	; 0x7dc <fputc+0x16>
 7d6:	8f ef       	ldi	r24, 0xFF	; 255
 7d8:	9f ef       	ldi	r25, 0xFF	; 255
 7da:	2c c0       	rjmp	.+88     	; 0x834 <fputc+0x6e>
 7dc:	22 ff       	sbrs	r18, 2
 7de:	16 c0       	rjmp	.+44     	; 0x80c <fputc+0x46>
 7e0:	46 81       	ldd	r20, Z+6	; 0x06
 7e2:	57 81       	ldd	r21, Z+7	; 0x07
 7e4:	24 81       	ldd	r18, Z+4	; 0x04
 7e6:	35 81       	ldd	r19, Z+5	; 0x05
 7e8:	42 17       	cp	r20, r18
 7ea:	53 07       	cpc	r21, r19
 7ec:	44 f4       	brge	.+16     	; 0x7fe <fputc+0x38>
 7ee:	a0 81       	ld	r26, Z
 7f0:	b1 81       	ldd	r27, Z+1	; 0x01
 7f2:	9d 01       	movw	r18, r26
 7f4:	2f 5f       	subi	r18, 0xFF	; 255
 7f6:	3f 4f       	sbci	r19, 0xFF	; 255
 7f8:	31 83       	std	Z+1, r19	; 0x01
 7fa:	20 83       	st	Z, r18
 7fc:	8c 93       	st	X, r24
 7fe:	26 81       	ldd	r18, Z+6	; 0x06
 800:	37 81       	ldd	r19, Z+7	; 0x07
 802:	2f 5f       	subi	r18, 0xFF	; 255
 804:	3f 4f       	sbci	r19, 0xFF	; 255
 806:	37 83       	std	Z+7, r19	; 0x07
 808:	26 83       	std	Z+6, r18	; 0x06
 80a:	14 c0       	rjmp	.+40     	; 0x834 <fputc+0x6e>
 80c:	8b 01       	movw	r16, r22
 80e:	ec 01       	movw	r28, r24
 810:	fb 01       	movw	r30, r22
 812:	00 84       	ldd	r0, Z+8	; 0x08
 814:	f1 85       	ldd	r31, Z+9	; 0x09
 816:	e0 2d       	mov	r30, r0
 818:	09 95       	icall
 81a:	89 2b       	or	r24, r25
 81c:	e1 f6       	brne	.-72     	; 0x7d6 <fputc+0x10>
 81e:	d8 01       	movw	r26, r16
 820:	16 96       	adiw	r26, 0x06	; 6
 822:	8d 91       	ld	r24, X+
 824:	9c 91       	ld	r25, X
 826:	17 97       	sbiw	r26, 0x07	; 7
 828:	01 96       	adiw	r24, 0x01	; 1
 82a:	17 96       	adiw	r26, 0x07	; 7
 82c:	9c 93       	st	X, r25
 82e:	8e 93       	st	-X, r24
 830:	16 97       	sbiw	r26, 0x06	; 6
 832:	ce 01       	movw	r24, r28
 834:	df 91       	pop	r29
 836:	cf 91       	pop	r28
 838:	1f 91       	pop	r17
 83a:	0f 91       	pop	r16
 83c:	08 95       	ret

0000083e <__ultoa_invert>:
 83e:	fa 01       	movw	r30, r20
 840:	aa 27       	eor	r26, r26
 842:	28 30       	cpi	r18, 0x08	; 8
 844:	51 f1       	breq	.+84     	; 0x89a <__ultoa_invert+0x5c>
 846:	20 31       	cpi	r18, 0x10	; 16
 848:	81 f1       	breq	.+96     	; 0x8aa <__ultoa_invert+0x6c>
 84a:	e8 94       	clt
 84c:	6f 93       	push	r22
 84e:	6e 7f       	andi	r22, 0xFE	; 254
 850:	6e 5f       	subi	r22, 0xFE	; 254
 852:	7f 4f       	sbci	r23, 0xFF	; 255
 854:	8f 4f       	sbci	r24, 0xFF	; 255
 856:	9f 4f       	sbci	r25, 0xFF	; 255
 858:	af 4f       	sbci	r26, 0xFF	; 255
 85a:	b1 e0       	ldi	r27, 0x01	; 1
 85c:	3e d0       	rcall	.+124    	; 0x8da <__ultoa_invert+0x9c>
 85e:	b4 e0       	ldi	r27, 0x04	; 4
 860:	3c d0       	rcall	.+120    	; 0x8da <__ultoa_invert+0x9c>
 862:	67 0f       	add	r22, r23
 864:	78 1f       	adc	r23, r24
 866:	89 1f       	adc	r24, r25
 868:	9a 1f       	adc	r25, r26
 86a:	a1 1d       	adc	r26, r1
 86c:	68 0f       	add	r22, r24
 86e:	79 1f       	adc	r23, r25
 870:	8a 1f       	adc	r24, r26
 872:	91 1d       	adc	r25, r1
 874:	a1 1d       	adc	r26, r1
 876:	6a 0f       	add	r22, r26
 878:	71 1d       	adc	r23, r1
 87a:	81 1d       	adc	r24, r1
 87c:	91 1d       	adc	r25, r1
 87e:	a1 1d       	adc	r26, r1
 880:	20 d0       	rcall	.+64     	; 0x8c2 <__ultoa_invert+0x84>
 882:	09 f4       	brne	.+2      	; 0x886 <__ultoa_invert+0x48>
 884:	68 94       	set
 886:	3f 91       	pop	r19
 888:	2a e0       	ldi	r18, 0x0A	; 10
 88a:	26 9f       	mul	r18, r22
 88c:	11 24       	eor	r1, r1
 88e:	30 19       	sub	r19, r0
 890:	30 5d       	subi	r19, 0xD0	; 208
 892:	31 93       	st	Z+, r19
 894:	de f6       	brtc	.-74     	; 0x84c <__ultoa_invert+0xe>
 896:	cf 01       	movw	r24, r30
 898:	08 95       	ret
 89a:	46 2f       	mov	r20, r22
 89c:	47 70       	andi	r20, 0x07	; 7
 89e:	40 5d       	subi	r20, 0xD0	; 208
 8a0:	41 93       	st	Z+, r20
 8a2:	b3 e0       	ldi	r27, 0x03	; 3
 8a4:	0f d0       	rcall	.+30     	; 0x8c4 <__ultoa_invert+0x86>
 8a6:	c9 f7       	brne	.-14     	; 0x89a <__ultoa_invert+0x5c>
 8a8:	f6 cf       	rjmp	.-20     	; 0x896 <__ultoa_invert+0x58>
 8aa:	46 2f       	mov	r20, r22
 8ac:	4f 70       	andi	r20, 0x0F	; 15
 8ae:	40 5d       	subi	r20, 0xD0	; 208
 8b0:	4a 33       	cpi	r20, 0x3A	; 58
 8b2:	18 f0       	brcs	.+6      	; 0x8ba <__ultoa_invert+0x7c>
 8b4:	49 5d       	subi	r20, 0xD9	; 217
 8b6:	31 fd       	sbrc	r19, 1
 8b8:	40 52       	subi	r20, 0x20	; 32
 8ba:	41 93       	st	Z+, r20
 8bc:	02 d0       	rcall	.+4      	; 0x8c2 <__ultoa_invert+0x84>
 8be:	a9 f7       	brne	.-22     	; 0x8aa <__ultoa_invert+0x6c>
 8c0:	ea cf       	rjmp	.-44     	; 0x896 <__ultoa_invert+0x58>
 8c2:	b4 e0       	ldi	r27, 0x04	; 4
 8c4:	a6 95       	lsr	r26
 8c6:	97 95       	ror	r25
 8c8:	87 95       	ror	r24
 8ca:	77 95       	ror	r23
 8cc:	67 95       	ror	r22
 8ce:	ba 95       	dec	r27
 8d0:	c9 f7       	brne	.-14     	; 0x8c4 <__ultoa_invert+0x86>
 8d2:	00 97       	sbiw	r24, 0x00	; 0
 8d4:	61 05       	cpc	r22, r1
 8d6:	71 05       	cpc	r23, r1
 8d8:	08 95       	ret
 8da:	9b 01       	movw	r18, r22
 8dc:	ac 01       	movw	r20, r24
 8de:	0a 2e       	mov	r0, r26
 8e0:	06 94       	lsr	r0
 8e2:	57 95       	ror	r21
 8e4:	47 95       	ror	r20
 8e6:	37 95       	ror	r19
 8e8:	27 95       	ror	r18
 8ea:	ba 95       	dec	r27
 8ec:	c9 f7       	brne	.-14     	; 0x8e0 <__ultoa_invert+0xa2>
 8ee:	62 0f       	add	r22, r18
 8f0:	73 1f       	adc	r23, r19
 8f2:	84 1f       	adc	r24, r20
 8f4:	95 1f       	adc	r25, r21
 8f6:	a0 1d       	adc	r26, r0
 8f8:	08 95       	ret

000008fa <__prologue_saves__>:
 8fa:	2f 92       	push	r2
 8fc:	3f 92       	push	r3
 8fe:	4f 92       	push	r4
 900:	5f 92       	push	r5
 902:	6f 92       	push	r6
 904:	7f 92       	push	r7
 906:	8f 92       	push	r8
 908:	9f 92       	push	r9
 90a:	af 92       	push	r10
 90c:	bf 92       	push	r11
 90e:	cf 92       	push	r12
 910:	df 92       	push	r13
 912:	ef 92       	push	r14
 914:	ff 92       	push	r15
 916:	0f 93       	push	r16
 918:	1f 93       	push	r17
 91a:	cf 93       	push	r28
 91c:	df 93       	push	r29
 91e:	cd b7       	in	r28, 0x3d	; 61
 920:	de b7       	in	r29, 0x3e	; 62
 922:	ca 1b       	sub	r28, r26
 924:	db 0b       	sbc	r29, r27
 926:	0f b6       	in	r0, 0x3f	; 63
 928:	f8 94       	cli
 92a:	de bf       	out	0x3e, r29	; 62
 92c:	0f be       	out	0x3f, r0	; 63
 92e:	cd bf       	out	0x3d, r28	; 61
 930:	09 94       	ijmp

00000932 <__epilogue_restores__>:
 932:	2a 88       	ldd	r2, Y+18	; 0x12
 934:	39 88       	ldd	r3, Y+17	; 0x11
 936:	48 88       	ldd	r4, Y+16	; 0x10
 938:	5f 84       	ldd	r5, Y+15	; 0x0f
 93a:	6e 84       	ldd	r6, Y+14	; 0x0e
 93c:	7d 84       	ldd	r7, Y+13	; 0x0d
 93e:	8c 84       	ldd	r8, Y+12	; 0x0c
 940:	9b 84       	ldd	r9, Y+11	; 0x0b
 942:	aa 84       	ldd	r10, Y+10	; 0x0a
 944:	b9 84       	ldd	r11, Y+9	; 0x09
 946:	c8 84       	ldd	r12, Y+8	; 0x08
 948:	df 80       	ldd	r13, Y+7	; 0x07
 94a:	ee 80       	ldd	r14, Y+6	; 0x06
 94c:	fd 80       	ldd	r15, Y+5	; 0x05
 94e:	0c 81       	ldd	r16, Y+4	; 0x04
 950:	1b 81       	ldd	r17, Y+3	; 0x03
 952:	aa 81       	ldd	r26, Y+2	; 0x02
 954:	b9 81       	ldd	r27, Y+1	; 0x01
 956:	ce 0f       	add	r28, r30
 958:	d1 1d       	adc	r29, r1
 95a:	0f b6       	in	r0, 0x3f	; 63
 95c:	f8 94       	cli
 95e:	de bf       	out	0x3e, r29	; 62
 960:	0f be       	out	0x3f, r0	; 63
 962:	cd bf       	out	0x3d, r28	; 61
 964:	ed 01       	movw	r28, r26
 966:	08 95       	ret

00000968 <_exit>:
 968:	f8 94       	cli

0000096a <__stop_program>:
 96a:	ff cf       	rjmp	.-2      	; 0x96a <__stop_program>
